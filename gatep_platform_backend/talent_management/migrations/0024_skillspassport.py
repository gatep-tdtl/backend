# Generated by Django 5.2.3 on 2025-08-14 12:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('talent_management', '0023_resumedocument'),
    ]

    operations = [
        migrations.CreateModel(
            name='SkillsPassport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'Pending Generation'), ('COMPLETED', 'Completed Successfully'), ('FAILED', 'Generation Failed')], default='PENDING', max_length=50)),
                ('global_readiness_score', models.IntegerField(default=0, help_text='Overall weighted score (0-100)')),
                ('relocation_score', models.IntegerField(default=0, help_text='AI-generated score for relocation readiness (0-100)')),
                ('cultural_adaptability_score', models.IntegerField(default=0, help_text='AI-generated score for cultural fit (0-100)')),
                ('communication_skills_score', models.IntegerField(default=0, help_text='From interview report (0-100)')),
                ('technical_readiness_score', models.IntegerField(default=0, help_text='From interview report (0-100)')),
                ('ai_powered_summary', models.TextField(blank=True, help_text='AI-generated professional summary.')),
                ('key_strengths', models.JSONField(default=list, help_text="List of key strength tags, e.g., ['Advanced ML/DL', ...]")),
                ('specialization_scores', models.JSONField(default=dict, help_text="Dict of specializations and their scores, e.g., {'Machine Learning': 95}")),
                ('frameworks_tools', models.JSONField(default=list, help_text="List of dicts: [{'name': 'PyTorch', 'projects': 12, 'proficiency': 4}]")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('source_interview', models.OneToOneField(help_text='The interview result this passport is based on.', on_delete=django.db.models.deletion.CASCADE, related_name='skills_passport', to='talent_management.mockinterviewresult')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills_passports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'source_interview')},
            },
        ),
    ]
